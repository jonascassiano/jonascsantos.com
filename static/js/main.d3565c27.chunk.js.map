{"version":3,"sources":["components/icons/loader.js","utils/index.js","styles/theme.js","styles/media.js","styles/mixins.js","components/loader.js","App.js","serviceWorker.js","index.js"],"names":["IconLoader","id","xmlns","role","viewBox","d","fill","transform","className","stroke","strokeWidth","strokeLinecap","strokeLinejoin","width","height","rx","ry","hex2rgba","hex","alpha","match","map","x","parseInt","r","g","b","theme","colors","darkNavy","navy","lightNavy","lightestNavy","slate","lightSlate","lightestSlate","white","green","transGreen","shadowNavy","fonts","Calibre","SFMono","fontSizes","xs","smish","sm","md","lg","xl","xxl","h3","easing","transition","borderRadius","navHeight","navScrollHeight","margin","tabHeight","tabWidth","radius","hamburgerWidth","hamBefore","hamBeforeActive","hamAfter","hamAfterActive","navDelay","loaderDelay","sizes","giant","bigDesktop","desktop","tablet","thone","phablet","phone","tiny","media","Object","keys","reduce","accumulator","label","emSize","css","mixins","flexCenter","flexBetween","outline","link","inlineLink","smallButton","bigButton","sidePadding","boxShadow","fancyList","StyledContainer","styled","div","StyledLogo","props","isMounted","Loader","finishLoading","useState","setIsMounted","useEffect","timeout","setTimeout","anime","timeline","complete","add","targets","strokeDashoffset","setDashoffset","duration","delay","translateX","opacity","clearTimeout","App","isLoading","setIsLoading","ReactGa","initialize","pageview","ClickHandler","name","event","category","action","src","alt","loop","Infinity","wrapper","steps","class","href","onClick","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d3565c27.chunk.js","sourcesContent":["import React from 'react';\n\nconst IconLoader = () => (\n  <svg id=\"logo\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 8500 8500\"  >\n    <title>Loader Logo</title>\n    <g>\n      <g id=\"J\" >\n        <path\n          d=\"M4796 4574c0,522 -129,928 -387,1218 -258,289 -602,434 -1032,434 -184,0 -339,-19 -463,-59 -32,-11 -31,-4 -31,-35l0 -616c0,-5 -7,-49 44,-21 2,2 4,3 7,4 109,59 242,89 401,89 487,0 730,-377 730,-1131 0,-894 0,-1788 0,-2683 0,-32 28,-26 28,-26 225,0 450,0 676,0 0,0 27,-6 27,25l0 2801z\"\n          fill=\"currentColor\"\n        />\n      </g>\n      <g transform=\"translate(-3500 0)\">\n        <path\n          className=\"left\"\n          fill=\"currentColor\"\n          d=\"M1229 4204l845 -842c6,-6 14,-14 25,-22 11,-8 21,-13 32,-13 14,0 24,4 32,11 8,7 16,15 25,24l102 106c8,8 15,17 23,25 7,9 12,19 12,33 0,14 -2,25 -6,32 -5,6 -12,14 -21,24l-674 672 674 672c9,9 16,17 21,24 4,6 6,17 6,32 0,13 -5,24 -12,32 -8,9 -15,17 -23,25l-102 107c-9,8 -17,16 -25,23 -8,7 -18,11 -32,11 -11,0 -21,-4 -32,-13 -11,-8 -19,-15 -25,-21l-845 -842c-5,-5 -10,-12 -16,-21 -6,-9 -9,-20 -9,-30 0,-10 3,-19 9,-28 6,-8 11,-15 16,-21z\"\n        />\n      </g>\n      <g transform=\"translate(3500 0)\">\n        <path className=\"right\" fill=\"currentColor\" d=\"M6844 3362l845 842c4,6 10,13 16,21 6,9 9,18 9,28 0,10 -3,21 -9,30 -6,9 -12,16 -16,21l-845 842c-6,6 -14,13 -25,21 -11,9 -22,13 -33,13 -13,0 -24,-4 -31,-11 -8,-7 -17,-15 -25,-23l-103 -107c-7,-8 -14,-16 -22,-25 -8,-8 -12,-19 -12,-32 0,-15 2,-26 7,-32 4,-7 10,-15 20,-24l674 -672 -674 -672c-10,-10 -16,-18 -20,-24 -5,-7 -7,-18 -7,-32 0,-14 4,-24 12,-33 8,-8 15,-17 22,-25l103 -106c8,-9 17,-17 25,-24 7,-7 18,-11 31,-11 11,0 22,5 33,13 11,8 19,16 25,22z\" />\n        <path className=\"right\" fill=\"currentColor\" d=\"M5147 5515l1035 -2521c13,-31 27,-52 43,-63 16,-11 38,-16 68,-16l161 0c38,0 63,6 73,18 10,13 8,38 -6,75 -45,106 -95,227 -152,363 -56,136 -116,280 -178,431 -63,151 -126,307 -191,466 -65,159 -129,315 -191,466 -63,152 -122,296 -179,432 -56,136 -107,258 -151,364 -18,42 -48,63 -90,63l-189 0c-57,0 -74,-26 -53,-78z\" />\n      </g>\n      <g>\n        <rect\n          className=\"st0\"\n          stroke=\"currentColor\"\n          strokeWidth=\"350\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          transform=\"matrix(0.605592 0.605592 -0.605592 0.605592 4425.83 234.088)\"\n          width=\"6657\"\n          height=\"6657\"\n          rx=\"84\"\n          ry=\"84\"\n        />\n      </g>\n    </g>\n  </svg>\n);\n\nexport default IconLoader;\n","export const throttle = (func, wait = 100) => {\n  let timer = null;\n  return function(...args) {\n    if (timer === null) {\n      timer = setTimeout(() => {\n        func.apply(this, args);\n        timer = null;\n      }, wait);\n    }\n  };\n};\n\nexport const hex2rgba = (hex, alpha = 1) => {\n  const [r, g, b] = hex.match(/\\w\\w/g).map(x => parseInt(x, 16));\n  return `rgba(${r},${g},${b},${alpha})`;\n};\n","import { hex2rgba } from '../utils';\n\nconst ACCENT = '#64ffda';\nconst DARK_BG = '#020c1b';\nconst BG = '#0a192f';\n\nconst theme = {\n  colors: {\n    darkNavy: DARK_BG,\n    navy: BG,\n    lightNavy: '#172a45',\n    lightestNavy: '#303C55',\n    slate: '#8892b0',\n    lightSlate: '#a8b2d1',\n    lightestSlate: '#ccd6f6',\n    white: '#e6f1ff',\n    green: ACCENT,\n    transGreen: hex2rgba(ACCENT, 0.07),\n    shadowNavy: hex2rgba(DARK_BG, 0.7),\n  },\n\n  fonts: {\n    Calibre:\n      'Calibre, San Francisco, SF Pro Text, -apple-system, system-ui, BlinkMacSystemFont, Roboto, Helvetica Neue, Segoe UI, Arial, sans-serif',\n    SFMono: 'SF Mono, Fira Code, Fira Mono, Roboto Mono, Lucida Console, Monaco, monospace',\n  },\n\n  fontSizes: {\n    xs: '12px',\n    smish: '13px',\n    sm: '14px',\n    md: '16px',\n    lg: '18px',\n    xl: '20px',\n    xxl: '22px',\n    h3: '32px',\n  },\n\n  easing: 'cubic-bezier(0.645, 0.045, 0.355, 1)',\n  transition: 'all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1)',\n\n  borderRadius: '3px',\n  navHeight: '100px',\n  navScrollHeight: '70px',\n  margin: '20px',\n\n  tabHeight: 42,\n  tabWidth: 120,\n  radius: 3,\n\n  hamburgerWidth: 30,\n  hamBefore: `top 0.1s ease-in 0.25s, opacity 0.1s ease-in`,\n  hamBeforeActive: `top 0.1s ease-out, opacity 0.1s ease-out 0.12s`,\n  hamAfter: `bottom 0.1s ease-in 0.25s, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19)`,\n  hamAfterActive: `bottom 0.1s ease-out, transform 0.22s cubic-bezier(0.215, 0.61, 0.355, 1) 0.12s`,\n\n  navDelay: 1000,\n  loaderDelay: 2000,\n};\n\nexport default theme;\n","import { css } from 'styled-components';\n\nconst sizes = {\n  giant: 1440,\n  bigDesktop: 1200,\n  desktop: 1000,\n  tablet: 768,\n  thone: 600,\n  phablet: 480,\n  phone: 376,\n  tiny: 330,\n};\n\n// iterate through the sizes and create a media template\nexport const media = Object.keys(sizes).reduce((accumulator, label) => {\n  // use em in breakpoints to work properly cross-browser and support users\n  // changing their browsers font-size: https://zellwk.com/blog/media-query-units/\n  const emSize = sizes[label] / 16;\n  accumulator[label] = (...args) => css`\n    @media (max-width: ${emSize}em) {\n      ${css(...args)};\n    }\n  `;\n  return accumulator;\n}, {});\n\nexport default media;\n","import { css } from 'styled-components';\nimport theme from './theme';\nimport media from './media';\nconst { colors, fontSizes, fonts } = theme;\n\nconst mixins = {\n  flexCenter: css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `,\n\n  flexBetween: css`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  `,\n \n  outline: css`\n    outline: 1px solid red;\n  `,\n\n  link: css`\n    display: inline-block;\n    text-decoration: none;\n    text-decoration-skip-ink: auto;\n    color: inherit;\n    position: relative;\n    transition: ${theme.transition};\n    cursor: pointer;\n    &:hover,\n    &:active,\n    &:focus {\n      color: ${colors.green};\n      outline: 0;\n    }\n  `,\n\n  inlineLink: css`\n    display: inline-block;\n    text-decoration: none;\n    text-decoration-skip-ink: auto;\n    position: relative;\n    transition: ${theme.transition};\n    cursor: pointer;\n    color: ${colors.green};\n    &:hover,\n    &:focus,\n    &:active {\n      color: ${colors.green};\n      outline: 0;\n      &:after {\n        width: 100%;\n      }\n      & > * {\n        color: ${colors.green} !important;\n        transition: ${theme.transition};\n      }\n    }\n    &:after {\n      content: '';\n      display: block;\n      width: 0;\n      height: 1px;\n      position: relative;\n      bottom: 0.37em;\n      background-color: ${colors.green};\n      transition: ${theme.transition};\n      opacity: 0.5;\n    }\n  `,\n\n  smallButton: css`\n    color: ${colors.green};\n    background-color: transparent;\n    border: 1px solid ${colors.green};\n    border-radius: ${theme.borderRadius};\n    padding: 0.75rem 1rem;\n    font-size: ${fontSizes.smish};\n    font-family: ${fonts.SFMono};\n    line-height: 1;\n    text-decoration: none;\n    cursor: pointer;\n    transition: ${theme.transition};\n    &:hover,\n    &:focus,\n    &:active {\n      background-color: ${colors.transGreen};\n    }\n    &:after {\n      display: none !important;\n    }\n  `,\n\n  bigButton: css`\n    color: ${colors.green};\n    background-color: transparent;\n    border: 1px solid ${colors.green};\n    border-radius: ${theme.borderRadius};\n    padding: 1.25rem 1.75rem;\n    font-size: ${fontSizes.sm};\n    font-family: ${fonts.SFMono};\n    line-height: 1;\n    text-decoration: none;\n    cursor: pointer;\n    transition: ${theme.transition};\n    &:hover,\n    &:focus,\n    &:active {\n      background-color: ${colors.transGreen};\n    }\n    &:after {\n      display: none !important;\n    }\n  `,\n\n  sidePadding: css`\n    padding: 0 150px;\n    ${media.desktop`padding: 0 100px;`};\n    ${media.tablet`padding: 0 50px;`};\n    ${media.phablet`padding: 0 25px;`};\n  `,\n\n  boxShadow: css`\n    box-shadow: 0 10px 30px -15px ${colors.shadowNavy};\n    transition: ${theme.transition};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0 20px 30px -15px ${colors.shadowNavy};\n    }\n  `,\n\n  fancyList: css`\n    padding: 0;\n    margin: 0;\n    list-style: none;\n    font-size: ${fontSizes.lg};\n    li {\n      position: relative;\n      padding-left: 30px;\n      margin-bottom: 10px;\n      &:before {\n        content: '▹';\n        position: absolute;\n        left: 0;\n        color: ${colors.green};\n      }\n    }\n  `,\n};\n\nexport default mixins;\n","import React, { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport anime from 'animejs';\nimport { IconLoader } from '../components/icons';\nimport styled from 'styled-components';\nimport { theme, mixins } from '../styles';\nconst { colors } = theme;\n\nconst StyledContainer = styled.div`\n  ${mixins.flexCenter};\n  background-color: \"#f6f6f6\";\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 99;\n`;\nconst StyledLogo = styled.div`\n  width: max-content;\n  max-width: 100px;\n  transition: ${theme.transition};\n  opacity: ${props => (props.isMounted ? 1 : 0)};\n  svg {\n    width: 100%;\n    height: 100%;\n    display: block;\n    margin: 0 auto;\n    fill: none;\n    user-select: none;\n    #J {\n      opacity: 0;\n    }\n  }\n`;\n\nconst Loader = ({ finishLoading }) => {\n  const animate = () => {\n    const loader = anime.timeline({\n      complete: () => finishLoading(),\n    });\n\n    loader\n      .add({\n        targets: '.st0',\n        strokeDashoffset: [anime.setDashoffset, 0],\n        easing: 'cubicBezier(.5, .05, .1, .3)',\n        duration: 1500,\n        delay: 500,\n      })\n      .add({\n        targets: '.right',\n        translateX: -3500,\n        easing: 'easeOutQuad',\n      }, 1000)\n      .add({\n        targets: '.left',\n        translateX: '3500',\n        easing: 'easeOutQuad',\n      }, 1000)\n      .add({\n        targets: '#logo #J',\n        duration: 1500,\n        easing: 'easeInOutQuart',\n        opacity: 1,\n      }, 1000)\n      .add({\n        targets: '#logo',\n        delay: 500,\n        duration: 500,\n        easing: 'easeInOutQuart',\n        opacity: 0,\n      });\n  \n  };\n\n  const [isMounted, setIsMounted] = useState(false);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setIsMounted(true), 10);\n    animate();\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return (\n    <StyledContainer className=\"loader\">\n      {/* <Helmet bodyAttributes={{ class: `hidden` }} /> */}\n      <StyledLogo isMounted={isMounted}>\n        <IconLoader />\n      </StyledLogo>\n    </StyledContainer>\n  );\n};\n\nLoader.propTypes = {\n  finishLoading: PropTypes.func.isRequired,\n};\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Typical from 'react-typical'\nimport ReactGa from 'react-ga'\nimport { useLocation } from \"react-router-dom\";\nimport { Loader } from './components';\n\nfunction App() {\n  const isHome = true;\n  //const isHome = location.pathname === '/'; \n  const [isLoading, setIsLoading] = useState(isHome);\n\n  useEffect(() => {\n    if (isLoading) {\n      return;\n    }\n    // if (location.hash) {\n    //   const id = location.hash.substring(1); // location.hash without the '#'\n    //   setTimeout(() => {\n    //     const el = document.getElementById(id);\n    //     if (el) {\n    //       el.scrollIntoView();\n    //       el.focus();\n    //     }\n    //   }, 0);\n    // }\n  }, [isLoading]);\n\n  useEffect(() => {\n    ReactGa.initialize('UA-152578899-1')\n\n    ReactGa.pageview('/')\n  }, [])\n\n  const ClickHandler = (name) => {\n    ReactGa.event({\n      category: name,\n      action: 'Clicked'\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      {isLoading && isHome ? (\n        <Loader finishLoading={() => setIsLoading(false)} />\n      ) : (\n          <div>\n            {/* <header className=\"header\">\n              <nav class=\"nav\">\n                <ul>\n                  <li>\n                    <button class=\"nav__toggler nav__toggler--close\">\n                      <span></span>\n                      <span></span>\n                    </button>\n                  </li>\n                  <li>\n\n                    <a aria-current=\"page\" class=\"\" href=\"/\">Home</a>\n                  </li>\n                  <li>\n                    <a href=\"/projects/\">Projects</a></li><li><a href=\"/about/\">About</a>\n                  </li>\n                  <li>\n                    <a href=\"https://blog.jonascsantos.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Blog</a>\n                  </li>\n                  <li>\n                    <a href=\"/contact/\">Contact</a>\n                  </li>\n                </ul>\n                <button class=\"nav__toggler nav__toggler--toggle\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </button>\n              </nav>\n            </header> */}\n\n            <main className=\"Main\">\n              <img\n                src=\"https://avatars1.githubusercontent.com/u/15957868?s=460&u=0c7bfe98e60a74ee427a1d053f3603d0c4848e04&v=4\"\n                className=\"Photo shadowed\"\n                alt=\"logo\"\n              />\n              <h1>Hi, I'm Jonas dos Santos</h1>\n              <p>\n                I'm {' '}\n                <Typical\n                  loop={Infinity}\n                  wrapper=\"b\"\n                  steps={[\n                    'a Fullstack Developer 💻',\n                    1500,\n                    'a Brazilian student 🇧🇷',\n                    1500,\n                    'an Open Sourcer ✅',\n                    1500,\n                    \"a designer 🖌️ (still trying xD)\",\n                    1500,\n                    \"a dreamer 🚀\",\n                    3000,\n                  ]}\n                />\n              </p>\n              <div class=\"icon-wrap flex row\">\n                <a href=\"https://github.com/jonascsantos\" onClick={() => ClickHandler('github')}>\n                  <div class=\"flex shadowed translucent icon\">\n                    <ion-icon name=\"logo-github\"></ion-icon>\n                  </div>\n                </a>\n                <a href=\"https://www.linkedin.com/in/jonascsantos\" onClick={() => ClickHandler('linkedin')}>\n                  <div class=\"flex shadowed translucent icon\">\n                    <ion-icon name=\"logo-linkedin\"></ion-icon>\n                  </div>\n                </a>\n                <a href=\"https://www.instagram.com/jonas.cass/\" onClick={() => ClickHandler('instagram')}>\n                  <div class=\"flex shadowed translucent icon\">\n                    <ion-icon name=\"logo-instagram\"></ion-icon>\n                  </div>\n                </a>\n                <a href=\"https://twitter.com/jonascsantos_\" onClick={() => ClickHandler('twitter')}>\n                  <div class=\"flex shadowed translucent icon\">\n                    <ion-icon name=\"logo-twitter\"></ion-icon>\n                  </div>\n                </a>\n                <a href=\"mailto:jonas.cassiano@hotmail.com\" onClick={() => ClickHandler('email')}>\n                  <div class=\"flex shadowed translucent icon\">\n                    <ion-icon name=\"at\"></ion-icon>\n                  </div>\n                </a>\n              </div>\n            </main>\n          </div >\n        )}\n    </div>\n  );\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}